Index: app/src/main/java/com/example/androidFit/StepsCounter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.androidFit;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.annotation.SuppressLint;\nimport android.app.Activity;\nimport android.app.Dialog;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.hardware.Sensor;\nimport android.hardware.SensorEvent;\nimport android.hardware.SensorEventListener;\nimport android.hardware.SensorManager;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport com.google.android.gms.auth.api.signin.GoogleSignIn;\nimport com.google.android.gms.fitness.Fitness;\nimport com.google.android.gms.fitness.FitnessOptions;\nimport com.google.android.gms.fitness.data.Bucket;\nimport com.google.android.gms.fitness.data.DataPoint;\nimport com.google.android.gms.fitness.data.DataSet;\nimport com.google.android.gms.fitness.data.DataSource;\nimport com.google.android.gms.fitness.data.DataType;\nimport com.google.android.gms.fitness.data.Field;\nimport com.google.android.gms.fitness.request.DataReadRequest;\nimport com.google.android.gms.fitness.result.DataReadResponse;\nimport com.mikhaellopez.circularprogressbar.CircularProgressBar;\n\nimport java.io.BufferedReader;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.text.DecimalFormat;\nimport java.util.List;\nimport java.util.Locale;\nimport java.util.Objects;\nimport java.util.concurrent.TimeUnit;\n\nimport org.joda.time.DateTime;\n\npublic class StepsCounter extends AppCompatActivity implements SensorEventListener\n{\n    private static final int REQUEST_OAUTH_REQUEST_CODE = 0x1001;\n    private static final String TAG = \"MainActivity\";\n    private TextView counter;\n    private TextView weekCounter;\n    static DataSource ESTIMATED_STEP_DELTAS = new DataSource.Builder()\n            .setDataType(DataType.TYPE_STEP_COUNT_DELTA)\n            .setType(DataSource.TYPE_DERIVED)\n            .setStreamName(\"estimated_steps\")\n            .setAppPackageName(\"com.google.android.gms\")\n            .build();\n\n    private TextView permanentCount;\n    private TextView tempStepCount;\n    private TextView burntCalories;\n    private TextView targetToBurn;\n    private CircularProgressBar circularProgressBar;\n    private Button resetButton;\n    boolean activityRunning;\n    private SensorManager sensorManager;\n\n    private boolean firstSensorReading = true;\n\n    private Context context;\n    private float targetCalories;\n    private int stepCountAtLastReset;\n\n    DecimalFormat df = new DecimalFormat(\"0.00\");\n\n    private final String TARGET_CAL_FILE = \"targetCalories.txt\";\n    private final String LAST_STEP_CNT_FILE = \"lastStepCount.txt\";\n\n\n    @SuppressLint(\"MissingInflatedId\")\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_steps_counter);\n\n        context = this;\n\n        permanentCount =  findViewById(R.id.count);\n        tempStepCount =  findViewById(R.id.tempStepCount);\n        burntCalories = findViewById(R.id.burntCalories);\n        targetToBurn = findViewById(R.id.targetToBurn);\n\n        circularProgressBar = findViewById(R.id.circularProgressBar);\n        resetButton = findViewById(R.id.resetButton);\n\n        counter = findViewById(R.id.counter);\n        weekCounter = findViewById(R.id.week_counter);\n\n        resetButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                targetSetPopup();\n            }\n        });\n\n        if (hasFitPermission()) {\n            readStepCountDelta();\n            readHistoricStepCount();\n        } else {\n            requestFitnessPermission();\n        }\n\n        try {\n            initActivity();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        sensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);\n\n\n\n\n    }\n    private boolean hasFitPermission() {\n        FitnessOptions fitnessOptions = getFitnessSignInOptions();\n        return GoogleSignIn.hasPermissions(GoogleSignIn.getLastSignedInAccount(this), fitnessOptions);\n    }\n    private void requestFitnessPermission() {\n        GoogleSignIn.requestPermissions(\n                this,\n                REQUEST_OAUTH_REQUEST_CODE,\n                GoogleSignIn.getLastSignedInAccount(this),\n                getFitnessSignInOptions());\n    }\n\n    private FitnessOptions getFitnessSignInOptions() {\n        return FitnessOptions.builder()\n                .addDataType(DataType.TYPE_STEP_COUNT_CUMULATIVE)\n                .addDataType(DataType.TYPE_STEP_COUNT_DELTA)\n                .addDataType(DataType.AGGREGATE_DISTANCE_DELTA)\n                .build();\n    }\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n        super.onActivityResult(requestCode, resultCode, data);\n        if (resultCode == Activity.RESULT_OK) {\n            if (requestCode == REQUEST_OAUTH_REQUEST_CODE) {\n                Log.i(TAG, \"Fitness permission granted\");\n                subscribeStepCount();\n                readStepCountDelta(); // Read today's data\n                readHistoricStepCount(); // Read last weeks data\n            }\n        } else {\n            Log.i(TAG, \"Fitness permission denied\");\n        }\n    }\n    private void subscribeStepCount() {\n        Fitness.getRecordingClient(this, Objects.requireNonNull(GoogleSignIn.getLastSignedInAccount(this)))\n                .subscribe(DataType.TYPE_STEP_COUNT_CUMULATIVE);\n    }\n    private void readStepCountDelta() {\n        if (!hasFitPermission()) {\n            requestFitnessPermission();\n            return;\n        }\n\n        Fitness.getHistoryClient(this, Objects.requireNonNull(GoogleSignIn.getLastSignedInAccount(this)))\n                .readDailyTotal(DataType.AGGREGATE_STEP_COUNT_DELTA)\n                .addOnSuccessListener(\n                        dataSet -> {\n                            long total =\n                                    dataSet.isEmpty()\n                                            ? 0\n                                            : dataSet.getDataPoints().get(0).getValue(Field.FIELD_STEPS).asInt();\n                            Log.d(TAG, \"Total steps: \" + total);\n                            //display counts on screen\n                            counter.setText(String.format(Locale.ENGLISH, \"%d\", total));\n                        })\n                .addOnFailureListener(\n                        e -> Log.w(TAG, \"There was a problem getting the step count.\", e));\n\n\n    }\n    private void readHistoricStepCount() {\n        if (!hasFitPermission()) {\n            requestFitnessPermission();\n            return;\n        }\n\n        Fitness.getHistoryClient(this, Objects.requireNonNull(GoogleSignIn.getLastSignedInAccount(this)))\n                .readData(queryFitnessData())\n                .addOnSuccessListener(\n                        this::printData)\n                .addOnFailureListener(\n                        e -> Log.e(TAG, \"There was a problem reading the historic data.\", e));\n    }\n\n    public static DataReadRequest queryFitnessData() {\n        DateTime dt = new DateTime().withTimeAtStartOfDay();\n        long endTime = dt.getMillis();\n        long startTime = dt.minusWeeks(1).getMillis();\n\n        return new DataReadRequest.Builder()\n                .aggregate(ESTIMATED_STEP_DELTAS, DataType.AGGREGATE_STEP_COUNT_DELTA)\n                .bucketByTime(1, TimeUnit.DAYS)\n                .setTimeRange(startTime, endTime, TimeUnit.MILLISECONDS)\n                .build();\n    }\n\n    public void printData(DataReadResponse dataReadResult) {\n        StringBuilder result = new StringBuilder();\n        if (dataReadResult.getBuckets().size() > 0) {\n            Log.i(TAG, \"Number of returned buckets of DataSets is: \" + dataReadResult.getBuckets().size());\n            for (Bucket bucket : dataReadResult.getBuckets()) {\n                List<DataSet> dataSets = bucket.getDataSets();\n                for (DataSet dataSet : dataSets) {\n                    result.append(formatDataSet(dataSet));\n                }\n            }\n        } else if (dataReadResult.getDataSets().size() > 0) {\n            Log.i(TAG, \"Number of returned DataSets is: \" + dataReadResult.getDataSets().size());\n            for (DataSet dataSet : dataReadResult.getDataSets()) {\n                result.append(formatDataSet(dataSet));\n            }\n        }\n        Log.d(TAG, \"result: \" + result);\n        weekCounter.setText(result);\n    }\n    private static String formatDataSet(DataSet dataSet) {\n        StringBuilder result = new StringBuilder();\n\n        for (DataPoint dp : dataSet.getDataPoints()) {\n            org.joda.time.DateTime sDT = new org.joda.time.DateTime(dp.getStartTime(TimeUnit.MILLISECONDS));\n            org.joda.time.DateTime eDT = new org.joda.time.DateTime(dp.getEndTime(TimeUnit.MILLISECONDS));\n\n            result.append(\n                    String.format(\n                            Locale.ENGLISH,\n                            \"%s %s to %s %s\\n\",\n                            sDT.dayOfWeek().getAsShortText(),\n                            sDT.toLocalTime().toString(\"HH:mm\"),\n                            eDT.dayOfWeek().getAsShortText(),\n                            eDT.toLocalTime().toString(\"HH:mm\")\n                    )\n            );\n\n            result.append(\n                    String.format(\n                            Locale.ENGLISH,\n                            \"%s: %s %s\\n\",\n                            sDT.dayOfWeek().getAsShortText(),\n                            dp.getValue(dp.getDataType().getFields().get(0)),\n                            dp.getDataType().getFields().get(0).getName()));\n        }\n\n        return String.valueOf(result);\n    }\n\n\n    @Override\n    protected void onPostResume() {\n        super.onPostResume();\n        activityRunning = true;\n        Sensor counter = sensorManager.getDefaultSensor(Sensor.TYPE_STEP_COUNTER);\n        if(counter != null)\n        {\n            sensorManager.registerListener(this ,counter , SensorManager.SENSOR_DELAY_UI);\n        }\n\n        else\n            Toast.makeText(this ,  \"The device doesn't have support to count steps\" , Toast.LENGTH_LONG).show();\n    }\n\n    @Override\n    protected void onPause() {\n        super.onPause();\n        activityRunning = false;\n    }\n\n    @Override\n    public void onSensorChanged(SensorEvent event) {\n        if(activityRunning)\n        {\n            permanentCount.setText(String.valueOf((int)event.values[0]));\n            int steps = (int)event.values[0] - stepCountAtLastReset;\n            tempStepCount.setText(String.valueOf(steps));\n            burntCalories.setText( df.format( (float)steps/20));\n\n            if(firstSensorReading) {\n                firstSensorReading = false;\n                animateProgressBar();\n            }\n\n            circularProgressBar.setProgress(Math.min((float)steps/20 ,  targetCalories));\n\n        }\n\n    }\n\n    @Override\n    public void onAccuracyChanged(Sensor sensor, int accuracy) {\n    }\n\n    void animateProgressBar()\n    {\n      /*  System.out.println(\"-------------------------------------------------------------------------------------\");\n        System.out.println(\"permCount = \"+permanentCount.getText().toString());\n        System.out.println(\"last step count = \"+ stepCountAtLastReset);\n*/\n        int steps = Integer.parseInt(permanentCount.getText().toString()) - stepCountAtLastReset;\n        circularProgressBar.setProgressWithAnimation((float)steps/20 , 1000L);\n    }\n\n    void initProgressBar()\n    {\n        circularProgressBar.setProgressMax(targetCalories);\n        circularProgressBar.setProgress(0);\n   }\n\n   void initActivity() throws IOException {\n       importStepCountAtLastReset();\n       importTargetCalories();\n\n       targetToBurn.setText(String.valueOf(targetCalories));\n       int steps = Integer.parseInt(permanentCount.getText().toString()) - stepCountAtLastReset;\n       tempStepCount.setText(String.valueOf(steps));\n       burntCalories.setText( df.format( (float)steps/20));\n\n       initProgressBar();\n   }\n\n\n    private void targetSetPopup()\n    {\n        final EditText displayText;\n        final Button setButton;\n\n        final Dialog dialog = new Dialog(context);\n\n        dialog.setContentView(R.layout.set_target_to_burn);\n\n        displayText = dialog.findViewById(R.id.displayText);\n\n        setButton =  dialog.findViewById(R.id.setButton);\n\n\n\n\n        setButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                try {\n                    String calStr = displayText.getText().toString();\n\n                    if(! calStr.equals(\"\")) {\n                        exportStepCountAtLastReset(permanentCount.getText().toString());\n                        exportTargetCalories(calStr);\n\n                        tempStepCount.setText(\"0\");\n\n                        initActivity();\n\n                        dialog.dismiss();\n                    }\n\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        });\n\n        dialog.show();\n\n    }\n\n\n    void importTargetCalories() throws IOException {\n        FileInputStream fis = null;\n\n        try {\n            fis = openFileInput(TARGET_CAL_FILE);\n            BufferedReader reader = new BufferedReader(new BufferedReader(new InputStreamReader(fis)));\n            targetCalories = Float.parseFloat(reader.readLine());\n\n        } catch (Exception e) {\n\n\n            targetCalories = 0;\n            e.printStackTrace();\n        }\n        finally {\n            if(fis != null)\n            {\n                fis.close();\n            }\n        }\n    }\n\n    void importStepCountAtLastReset() throws IOException {\n        FileInputStream fis = null;\n\n        try {\n            fis = openFileInput(LAST_STEP_CNT_FILE);\n            BufferedReader reader = new BufferedReader(new BufferedReader(new InputStreamReader(fis)));\n            stepCountAtLastReset = Integer.parseInt(reader.readLine());\n\n        } catch (Exception e) {\n\n            stepCountAtLastReset = 0;\n            e.printStackTrace();\n        }\n        finally {\n            if(fis != null)\n            {\n                fis.close();\n            }\n        }\n    }\n\n    void exportTargetCalories(String str) throws IOException {\n        FileOutputStream fos = null;\n        str = str+\"\\n\";\n\n        try {\n            fos = openFileOutput(TARGET_CAL_FILE , MODE_PRIVATE);\n            fos.write(str.getBytes());\n        } catch (FileNotFoundException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        finally {\n            if(fos != null)\n            {\n                fos.close();\n            }\n        }\n    }\n\n    void exportStepCountAtLastReset(String str) throws IOException {\n        FileOutputStream fos = null;\n\n        try {\n            fos = openFileOutput(LAST_STEP_CNT_FILE , MODE_PRIVATE);\n            fos.write(str.getBytes());\n        } catch (FileNotFoundException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        finally {\n            if(fos != null)\n            {\n                fos.close();\n            }\n        }\n    }\n\n\n}\n
===================================================================
diff --git a/app/src/main/java/com/example/androidFit/StepsCounter.java b/app/src/main/java/com/example/androidFit/StepsCounter.java
--- a/app/src/main/java/com/example/androidFit/StepsCounter.java	
+++ b/app/src/main/java/com/example/androidFit/StepsCounter.java	
@@ -308,10 +308,6 @@
 
     void animateProgressBar()
     {
-      /*  System.out.println("-------------------------------------------------------------------------------------");
-        System.out.println("permCount = "+permanentCount.getText().toString());
-        System.out.println("last step count = "+ stepCountAtLastReset);
-*/
         int steps = Integer.parseInt(permanentCount.getText().toString()) - stepCountAtLastReset;
         circularProgressBar.setProgressWithAnimation((float)steps/20 , 1000L);
     }
Index: app/src/main/res/values/ids.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <item name=\"counter\" type=\"id\" />\n    <item name=\"week_counter\" type=\"id\" />\n</resources>
===================================================================
diff --git a/app/src/main/res/values/ids.xml b/app/src/main/res/values/ids.xml
--- a/app/src/main/res/values/ids.xml	
+++ b/app/src/main/res/values/ids.xml	
@@ -2,4 +2,5 @@
 <resources>
     <item name="counter" type="id" />
     <item name="week_counter" type="id" />
+    <item name="count" type="id" />
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/example/androidFit/Adapters/CardAdapterForHome.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.androidFit.Adapters;\n\nimport android.content.Context;\nimport android.content.Intent;\nimport androidx.annotation.NonNull;\nimport androidx.recyclerview.widget.RecyclerView;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.FrameLayout;\nimport android.widget.ImageView;\nimport android.widget.TextView;\nimport com.example.androidFit.DatabaseHandlers.UserStatsDBHandler;\nimport com.example.androidFit.Model.Card;\nimport com.example.androidFit.R;\n/*\nimport androidx.annotation.NonNull;\nimport androidx.recyclerview.widget.RecyclerView;*/\n\n\n\nimport java.util.List;\n\npublic class CardAdapterForHome extends RecyclerView.Adapter<CardAdapterForHome.CardViewHolder> {\n\n    private Context context;\n    private List<Card> list;\n    private UserStatsDBHandler DbHandler;\n\n\n    public CardAdapterForHome(Context context, List<Card> list) {\n        this.context = context;\n        this.list = list;\n        this.DbHandler = new UserStatsDBHandler(context);\n    }\n\n    @NonNull\n    @Override\n    public CardViewHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int i) {\n\n        LayoutInflater inflater = LayoutInflater.from(context);\n        View view = inflater.inflate(R.layout.card_layout , null , false);\n        view.setLayoutParams(new FrameLayout.LayoutParams(FrameLayout.LayoutParams.MATCH_PARENT , FrameLayout.LayoutParams.WRAP_CONTENT));\n        return new CardViewHolder(view);\n    }\n\n    @Override\n    public void onBindViewHolder(@NonNull CardViewHolder cardViewHolder, int i) {\n\n        Card card = list.get(i);\n        cardViewHolder.textView.setText(card.getName());\n        cardViewHolder.imageView.setImageDrawable(context.getResources().getDrawable(R.drawable.app_icon_round));\n\n\n    }\n\n    @Override\n    public int getItemCount() {\n        return list.size();\n    }\n\n    class CardViewHolder extends  RecyclerView.ViewHolder\n    {\n        TextView textView;\n        ImageView imageView;\n        public CardViewHolder(@NonNull View itemView) {\n            super(itemView);\n\n            textView = itemView.findViewById(R.id.textView);\n            imageView = itemView.findViewById(R.id.imageView);\n\n\n\n\n        }\n\n\n\n\n    }\n}\n
===================================================================
diff --git a/app/src/main/java/com/example/androidFit/Adapters/CardAdapterForHome.java b/app/src/main/java/com/example/androidFit/Adapters/CardAdapterForHome.java
--- a/app/src/main/java/com/example/androidFit/Adapters/CardAdapterForHome.java	
+++ b/app/src/main/java/com/example/androidFit/Adapters/CardAdapterForHome.java	
@@ -48,7 +48,7 @@
     public void onBindViewHolder(@NonNull CardViewHolder cardViewHolder, int i) {
 
         Card card = list.get(i);
-        cardViewHolder.textView.setText(card.getName());
+//        cardViewHolder.textView.setText(card.getName());
         cardViewHolder.imageView.setImageDrawable(context.getResources().getDrawable(R.drawable.app_icon_round));
 
 
@@ -66,7 +66,7 @@
         public CardViewHolder(@NonNull View itemView) {
             super(itemView);
 
-            textView = itemView.findViewById(R.id.textView);
+//            textView = itemView.findViewById(R.id.textView);
             imageView = itemView.findViewById(R.id.imageView);
 
 
